- shell:
  -
    command: |
      if ! xcode-select -p >/dev/null 2>&1; then
        echo "Installing Xcode Command Line Tools..."
        xcode-select --install || echo "Installation command triggered; please follow GUI instructions."
      else
        echo "Xcode Command Line Tools already installed."
      fi
    description: Conditionally install Xcode Command Line Tools
    stdin: true
    stdout: true
  -
    command: |
      if ! command -v brew >/dev/null 2>&1; then
        echo "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        # Set up brew in current shell
        if [ -f /opt/homebrew/bin/brew ]; then
          eval "$(/opt/homebrew/bin/brew shellenv)"
        elif [ -f /usr/local/bin/brew ]; then
          eval "$(/usr/local/bin/brew shellenv)"
        fi
      else
        echo "Homebrew already installed."
      fi
    description: Conditionally install Homebrew and initialize shell environment
    stdin: true
    stdout: true
  -
    command: brew bundle --file=config/Brewfile
    description: brew install the MUST-HAVE
    stdin: true
    stdout: true
  -
    command: git submodule update --init --recursive
    description: Installing submodules
    stdout: true
  -
    command: defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/.dotfiles/iTerm2_config/" && defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
    description: Import iTerm2 config
    stdout: true

- defaults:
    link:
      relink: true
      create: true
      force: true
    shell:
      stderr: true

- clean: ['~', '~/.oh-my-zsh/custom/', '~/.oh-my-zsh/custom/plugins/']

- shell:
  -
    command: |
      # Install oh-my-zsh if not already installed
      if [ ! -d "$HOME/.oh-my-zsh" ]; then
        echo "Installing oh-my-zsh..."
        /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      else
        echo "oh-my-zsh already installed."
      fi
    description: Install oh-my-zsh
    stdin: true
    stdout: true
#   -
#     command: |
#       # Install or update Mac-CLI
#       if ! command -v mac >/dev/null 2>&1; then
#         echo "Installing Mac-CLI..."
#         /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/guarinogabriel/mac-cli/master/mac-cli/tools/install)"
#       else
#         echo "Mac-CLI already installed. Updating..."
#         /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/guarinogabriel/mac-cli/master/mac-cli/tools/update)"
#       fi
#     description: Install or update Mac-CLI
#     stdin: true
#     stdout: true
  -
    command: |
      # Change shell to zsh if not already default
      if [ "$SHELL" != "/bin/zsh" ]; then
        echo "Changing default shell to zsh..."
        chsh -s /bin/zsh
      else
        echo "Already using zsh."
      fi
    description: Set default shell to zsh
    stdin: true
    stdout: true

- link:
    ~/bin:
    ~/.bash_profile: config/bash_profile
    ~/.bashrc: config/bashrc
    ~/.zshrc: config/zshrc
    ~/.gitconfig: config/gitconfig
    ~/.gitignore_global: config/gitignore_global
    ~/.inputrc: config/inputrc
    ~/.dircolors: modules/dircolors-solarized/dircolors.256dark
    ~/.tmux.conf: config/tmux.conf
    ~/.vimrc: config/vimrc
    ~/.vim/autoload/plug.vim:
      path: modules/vim-plug/plug.vim
    ~/.config/starship.toml: config/starship.toml
    ~/.oh-my-zsh/custom/plugins/:
      create: true
      glob: true
      path: config/oh-my-zsh_custom/plugins/*

- shell:
  -
    command: |
      script -q /dev/null vim +PlugInstall +qall
    description: Installing vim plugins
    stdin: true
    stdout: true
  -
    command: |
      # Setup Xcode
      if command -v xcodebuild >/dev/null 2>&1; then
        echo "Setup Xcode..."
        ./xcode_config/config-preference.sh
      fi
    description: Setup Xcode environment
    stdin: true
    stdout: true
