# index start from 1
set -g base-index 1

# 256 color
set -g default-terminal "screen-256color"

# for pbcopy and pbpaste on OSX
# ref: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# set-option -g default-command "reattach-to-user-namespace -l bash"

# prevent ESC/ALT misinterpret
set -s escape-time 0

# prefix key
unbind C-b
set -g prefix ^H
bind h send-prefix

# iterm-like
unbind M-t
bind -n M-t new-window -n ""
unbind M-d
bind -n M-d detach-client
unbind M-n
bind -n M-n next-window
unbind M-p
bind -n M-p previous-window
unbind M-w
bind -n M-w confirm-before -p "Really kill-window #I? (y/n)" kill-window

# Switch windows by number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9


# rotate
bind ^R rotate-window -D

# set window notifications
setw -g monitor-activity on
set -g visual-activity off

# automatically set window title
setw -g allow-rename off
setw -g automatic-rename off

# mouse
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
set -g mouse-utf8 on

# renumber windows when a window is closed
set -g renumber-windows on

# allows for faster key repetition
set -g repeat-time 0

# copy selection color
setw -g mode-fg black
setw -g mode-bg green

# alert message line
set -g message-fg black
set -g message-bg green

# status line
set -g status-fg brightblack
set -g status-bg blue
set -g status-left  " "
set -g status-right "#[fg=white,bg=brightblack] [#{session_name}]#[fg=red] [ #[fg=cyan]#H #[fg=red]] #[fg=yellow]%Y.%m.%d #[default]  "
set -g status-interval 1
setw -g window-status-current-attr  reverse
setw -g window-status-bell-attr     none
setw -g window-status-bell-fg       red
setw -g window-status-activity-attr none
setw -g window-status-activity-fg   white
setw -g window-status-format         "[#I]#W:#{pane_current_command}"
setw -g window-status-current-format " [#I]#W:#{pane_current_command} "

# border
set -g pane-border-fg blue
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg blue

# split
bind | split-window -h
bind _ split-window -v

# mouse
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
# setw -g mode-mouse on

#
setw -g aggressive-resize on
set -g history-limit 1000000

# vim copy selection
bind ESCAPE copy-mode
unbind M-c
bind M-c copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'i' cancel

# vim key map
bind \; command-prompt

# {{{ vim-keys.conf
# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h
# bind ^s split-window -v -c "#{pane_current_path}"
# bind ^v split-window -h -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
# }}}
